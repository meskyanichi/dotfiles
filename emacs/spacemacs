;; -*- mode: emacs-lisp -*-

(defun dotspacemacs/layers ()
  (setq-default
   dotspacemacs-distribution 'spacemacs
   dotspacemacs-configuration-layer-path '()
   dotspacemacs-configuration-layers
   '(
     git
     org
     dash
     eyebrowse
     auto-completion
     emacs-lisp
     markdown
     rust
     elixir
     elm
     html
     go
     javascript
     yaml
     syntax-checking
     (spell-checking :variables
                     spell-checking-enable-by-default nil)
     (shell :variables
            shell-default-height 30
            shell-default-position 'bottom)
     )
   dotspacemacs-additional-packages
   '(
     git-gutter-fringe+
     docker
     dockerfile-mode
     )
   dotspacemacs-excluded-packages '(smartparens)
   dotspacemacs-delete-orphan-packages t
   )
  )

(defun dotspacemacs/init ()
  (setq-default
   dotspacemacs-elpa-https t
   dotspacemacs-elpa-timeout 5
   dotspacemacs-check-for-update t
   dotspacemacs-editing-style 'vim
   dotspacemacs-verbose-loading nil
   dotspacemacs-startup-banner 'official
   dotspacemacs-startup-lists '(projects recents bookmarks)
   dotspacemacs-startup-recent-list-size 10
   dotspacemacs-scratch-mode 'text-mode
   dotspacemacs-themes '(spacemacs-dark spacemacs-light)
   dotspacemacs-colorize-cursor-according-to-state t
   dotspacemacs-default-font '("Fira Mono"
                               :size 18
                               :weight normal
                               :width normal
                               :powerline-scale 1.3)
   dotspacemacs-leader-key "ยง"
   dotspacemacs-emacs-leader-key "M-m"
   dotspacemacs-major-mode-leader-key ","
   dotspacemacs-major-mode-emacs-leader-key "C-M-m"
   dotspacemacs-distinguish-gui-tab nil
   dotspacemacs-command-key ":"
   dotspacemacs-remap-Y-to-y$ t
   dotspacemacs-default-layout-name "Default"
   dotspacemacs-display-default-layout nil
   dotspacemacs-auto-resume-layouts nil
   dotspacemacs-auto-save-file-location 'cache
   dotspacemacs-max-rollback-slots 5
   dotspacemacs-use-ido nil
   dotspacemacs-helm-resize nil
   dotspacemacs-helm-no-header nil
   dotspacemacs-helm-position 'bottom
   dotspacemacs-enable-paste-micro-state nil
   dotspacemacs-which-key-delay 0.4
   dotspacemacs-which-key-position 'bottom
   dotspacemacs-loading-progress-bar t
   dotspacemacs-fullscreen-at-startup nil
   dotspacemacs-fullscreen-use-non-native nil
   dotspacemacs-maximized-at-startup t
   dotspacemacs-active-transparency 90
   dotspacemacs-inactive-transparency 90
   dotspacemacs-mode-line-unicode-symbols t
   dotspacemacs-smooth-scrolling nil
   dotspacemacs-line-numbers t
   dotspacemacs-smartparens-strict-mode nil
   dotspacemacs-highlight-delimiters 'all
   dotspacemacs-persistent-server nil
   dotspacemacs-search-tools '("ag" "pt" "ack" "grep")
   dotspacemacs-default-package-repository nil
   dotspacemacs-whitespace-cleanup 'all
   ))

(defun dotspacemacs/user-init ()

  ;; Dash
  (setq dash-helm-dash-docset-path "~/.docsets")

  ;; ISpell
  (setq ispell-personal-dictionary "~/.dictionary")

  ;; Load path for custom configuration
  (add-to-list 'load-path "~/dotfiles/emacs")
  )

(defun dotspacemacs/user-config ()

  ;; Linum
  (setq linum-format " %d ")

  ;; Fringe
  (setq-default left-fringe-width 15)
  (setq-default right-fringe-width 0)

  ;; Powerline
  (setq auto-revert-check-vc-info t)
  (setq ns-use-srgb-colorspace nil)
  (setq powerline-default-separator 'slant)
  (spaceline-compile)

  ;; M-x Alias
  (define-key evil-normal-state-map (kbd "_") 'helm-M-x)
  (define-key spacemacs-buffer-mode-map (kbd "_") 'helm-M-x)

  ;; Magit
  (define-key evil-normal-state-map (kbd "+") 'magit-status)

  ;; Evil Window
  (define-key evil-normal-state-map (kbd "<tab>") 'evil-window-next)
  (global-set-key (kbd "s-w") 'evil-window-delete)
  (global-set-key (kbd "s-q") 'evil-window-delete)
  (add-hook
   'eshell-mode-hook
   '(lambda ()
      (define-key evil-normal-state-local-map (kbd "<tab>") 'evil-window-next)))

  ;; Buffer
  (define-key evil-normal-state-map (kbd "s-<backspace>") 'helm-resume)

  ;; Projectile
  (define-key evil-normal-state-map (kbd "s-f") 'helm-projectile-find-file)

  ;; Search
  (define-key evil-normal-state-map (kbd "s-F") 'spacemacs/helm-files-smart-do-search)

  ;; Hippie Expand
  (define-key evil-insert-state-map (kbd "M-<tab>") 'hippie-expand)

  ;; Evil Nerd Commenter
  (define-key evil-normal-state-map (kbd ",ci") 'evilnc-comment-or-uncomment-lines)
  (define-key evil-visual-state-map (kbd ",ci") 'evilnc-comment-or-uncomment-lines)

  ;; Eyebrowse
  (global-set-key (kbd "s-1") 'eyebrowse-switch-to-window-config-1)
  (global-set-key (kbd "s-2") 'eyebrowse-switch-to-window-config-2)
  (global-set-key (kbd "s-3") 'eyebrowse-switch-to-window-config-3)
  (global-set-key (kbd "s-4") 'eyebrowse-close-window-config)

  ;; Git Gutter
  (require 'git-gutter-fringe+)
  (global-git-gutter+-mode)

  ;; Make
  (setq helm-make-named-buffer t)

  ;; Dash
  (setq helm-dash-browser-func 'eww)

  ;; Elm
  (setq elm-format-on-save t)

  ;; Crystal
  (autoload 'crystal-mode "crystal-mode" "Major mode for crystal files" t)
  (add-to-list 'auto-mode-alist '("\\.cr$" . crystal-mode))
  (add-to-list 'interpreter-mode-alist '("crystal" . crystal-mode))

  ;; Ruby
  (require 'chruby)
  )

;; Do not write anything past this comment. This is where Emacs will
;; auto-generate custom variable definitions.
(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(ansi-color-names-vector
   ["#0a0814" "#f2241f" "#67b11d" "#b1951d" "#4f97d7" "#a31db1" "#28def0" "#b2b2b2"])
 '(package-selected-packages
   (quote
    (color-theme-sanityinc-solarized powerline spinner log4e gntp json-snatcher json-reformat multiple-cursors parent-mode request haml-mode gitignore-mode fringe-helper git-gutter+ flx iedit highlight tablist docker-tramp web-completion-data s dash-functional deferred pos-tip go-mode yasnippet packed elixir-mode pkg-info epl async popup bind-key bind-map rust-mode projectile auto-complete avy tern f anzu smartparens flycheck company helm helm-core js2-mode markdown-mode alert magit magit-popup git-commit with-editor hydra package-build evil chruby yaml-mode xterm-color ws-butler window-numbering which-key web-mode web-beautify volatile-highlights vi-tilde-fringe use-package toml-mode toc-org tagedit spacemacs-theme spaceline solarized-theme smooth-scrolling smeargle slim-mode shell-pop scss-mode sass-mode ruby-end restart-emacs rainbow-delimiters racer quelpa popwin persp-mode pcre2el paradox page-break-lines orgit org-repo-todo org-present org-pomodoro org-plus-contrib org-bullets open-junk-file neotree multi-term move-text mmm-mode markdown-toc magit-gitflow macrostep lorem-ipsum linum-relative leuven-theme less-css-mode json-mode js2-refactor js-doc jade-mode info+ indent-guide ido-vertical-mode hungry-delete htmlize hl-todo highlight-parentheses highlight-numbers highlight-indentation help-fns+ helm-themes helm-swoop helm-projectile helm-mode-manager helm-make helm-gitignore helm-flyspell helm-flx helm-descbinds helm-dash helm-css-scss helm-company helm-c-yasnippet helm-ag google-translate golden-ratio go-eldoc gnuplot gitconfig-mode gitattributes-mode git-timemachine git-messenger git-gutter-fringe+ gh-md flycheck-rust flycheck-pos-tip flycheck-elm flx-ido fill-column-indicator fancy-battery eyebrowse expand-region exec-path-from-shell evil-visualstar evil-tutor evil-surround evil-search-highlight-persist evil-numbers evil-nerd-commenter evil-mc evil-matchit evil-magit evil-lisp-state evil-indent-plus evil-iedit-state evil-exchange evil-escape evil-args evil-anzu eval-sexp-fu eshell-prompt-extras esh-help emmet-mode elm-mode elisp-slime-nav dockerfile-mode docker define-word dash-at-point company-web company-tern company-statistics company-racer company-quickhelp company-go coffee-mode clean-aindent-mode buffer-move bracketed-paste auto-yasnippet auto-highlight-symbol auto-dictionary auto-compile alchemist aggressive-indent adaptive-wrap ace-window ace-link ace-jump-helm-line ac-ispell))))
(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(company-tooltip-common ((t (:inherit company-tooltip :weight bold :underline nil))))
 '(company-tooltip-common-selection ((t (:inherit company-tooltip-selection :weight bold :underline nil)))))
