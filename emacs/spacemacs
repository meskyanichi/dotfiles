;; -*- mode: emacs-lisp -*-

(defun dotspacemacs/layers ()
  (setq-default
   dotspacemacs-distribution 'spacemacs
   dotspacemacs-configuration-layer-path '()
   dotspacemacs-configuration-layers
   '(
     git
     org
     dash
     eyebrowse
     auto-completion
     emacs-lisp
     markdown
     rust
     elixir
     elm
     html
     go
     javascript
     yaml
     syntax-checking
     (spell-checking :variables
                     spell-checking-enable-by-default nil)
     (shell :variables
            shell-default-height 30
            shell-default-position 'bottom)
     )
   dotspacemacs-additional-packages
   '(
     git-gutter-fringe+
     docker
     dockerfile-mode
     )
   dotspacemacs-excluded-packages '()
   dotspacemacs-delete-orphan-packages t
   )
  )

(defun dotspacemacs/init ()
  (setq-default
   dotspacemacs-elpa-https t
   dotspacemacs-elpa-timeout 5
   dotspacemacs-check-for-update t
   dotspacemacs-editing-style 'vim
   dotspacemacs-verbose-loading nil
   dotspacemacs-startup-banner 'official
   dotspacemacs-startup-lists '(projects recents bookmarks)
   dotspacemacs-startup-recent-list-size 10
   dotspacemacs-scratch-mode 'text-mode
   dotspacemacs-themes '(solarized-dark solarized-light)
   dotspacemacs-colorize-cursor-according-to-state t
   dotspacemacs-default-font '("Monaco"
                               :size 16
                               :weight normal
                               :width normal
                               :powerline-scale 1.3)
   dotspacemacs-leader-key "ยง"
   dotspacemacs-emacs-leader-key "M-m"
   dotspacemacs-major-mode-leader-key ","
   dotspacemacs-major-mode-emacs-leader-key "C-M-m"
   dotspacemacs-distinguish-gui-tab nil
   dotspacemacs-command-key ":"
   dotspacemacs-remap-Y-to-y$ t
   dotspacemacs-default-layout-name "Default"
   dotspacemacs-display-default-layout nil
   dotspacemacs-auto-resume-layouts nil
   dotspacemacs-auto-save-file-location 'cache
   dotspacemacs-max-rollback-slots 5
   dotspacemacs-use-ido nil
   dotspacemacs-helm-resize nil
   dotspacemacs-helm-no-header nil
   dotspacemacs-helm-position 'bottom
   dotspacemacs-enable-paste-micro-state nil
   dotspacemacs-which-key-delay 0.4
   dotspacemacs-which-key-position 'bottom
   dotspacemacs-loading-progress-bar t
   dotspacemacs-fullscreen-at-startup nil
   dotspacemacs-fullscreen-use-non-native nil
   dotspacemacs-maximized-at-startup t
   dotspacemacs-active-transparency 90
   dotspacemacs-inactive-transparency 90
   dotspacemacs-mode-line-unicode-symbols t
   dotspacemacs-smooth-scrolling t
   dotspacemacs-line-numbers t
   dotspacemacs-smartparens-strict-mode nil
   dotspacemacs-highlight-delimiters 'all
   dotspacemacs-persistent-server nil
   dotspacemacs-search-tools '("ag" "pt" "ack" "grep")
   dotspacemacs-default-package-repository nil
   dotspacemacs-whitespace-cleanup 'all ; 'all, 'trailing, 'changed, 'nil
   ))

(defun dotspacemacs/user-init ()

  ;; Dash
  (setq dash-helm-dash-docset-path "~/.docsets")

  ;; ISpell
  (setq ispell-personal-dictionary "~/.dictionary")

  )

(defun dotspacemacs/user-config ()

  ;; M-x Alias
  (define-key evil-normal-state-map (kbd "_") 'helm-M-x)

  ;; Magit
  (define-key evil-normal-state-map (kbd "+") 'magit-status)

  ;; Evil Window
  (define-key evil-normal-state-map (kbd "<tab>") 'evil-window-next)
  (define-key evil-normal-state-map (kbd "s-w") 'evil-window-delete)

  ;; Buffer
  (define-key evil-normal-state-map (kbd "s-d") 'kill-this-buffer)

  ;; EShell
  (add-hook
   'eshell-mode-hook
   '(lambda ()
      (define-key evil-normal-state-local-map (kbd "<tab>") 'evil-window-next)))

  ;; Spacemacs Buffer
  (define-key spacemacs-buffer-mode-map (kbd "_") 'helm-M-x)

  ;; Projectile
  (define-key evil-normal-state-map (kbd "s-p") 'helm-projectile-find-file)

  ;; Powerline
  (setq auto-revert-check-vc-info t)
  (setq ns-use-srgb-colorspace nil)
  (setq powerline-default-separator 'slant)
  (spaceline-compile)

  ;; Evil Nerd Commenter
  (define-key evil-normal-state-map (kbd ",ci") 'evilnc-comment-or-uncomment-lines)
  (define-key evil-visual-state-map (kbd ",ci") 'evilnc-comment-or-uncomment-lines)

  ;; Eyebrowse
  (define-key evil-normal-state-map (kbd "s-1") 'eyebrowse-switch-to-window-config-1)
  (define-key evil-normal-state-map (kbd "s-2") 'eyebrowse-switch-to-window-config-2)
  (define-key evil-normal-state-map (kbd "s-3") 'eyebrowse-switch-to-window-config-3)
  (define-key evil-normal-state-map (kbd "s-4") 'eyebrowse-close-window-config)

  ;; Git Gutter
  (require 'git-gutter-fringe+)
  (global-git-gutter+-mode)

  ;; Dash
  (setq helm-dash-browser-func 'eww)

  )

;; Do not write anything past this comment. This is where Emacs will
;; auto-generate custom variable definitions.
